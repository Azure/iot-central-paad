trigger:
  - develop
pool:
  vmImage: 'macos-latest'

name: $(Date:yyyyMMdd)$(Rev:.r)
jobs:

- job: iOS
  timeoutInMinutes: 120
  variables:
    rootPath: '$(System.DefaultWorkingDirectory)'
    patchScript: '$(rootPath)/patchIpa.sh'
    archivePath: '$(rootPath)/output/archive'
    xcodeDeveloperDir: '/Applications/Xcode_$(Xcode_Version).app/Contents/Developer'
    xcarchivePath: '$(archivePath)/$(Project_Name).xcarchive'
    exportPath: '$(rootPath)/output/package'
    zipToSign: '$(exportPath)/$(Project_Name).zip'
    signedZip: '$(exportPath)/$(Project_Name).zip'
    signedExtractedPath: '$(exportPath)/signed'
    signedIpa: '$(exportPath)/signed/$(Project_Name).ipa'
    signedIpaAsZip: '$(exportPath)/signed/$(Project_Name).zip'
    patchedPath: '$(exportPath)/patched'
    swiftSupportPath: 'SwiftSupport/iphoneos'
    sourceSwiftSupportPath: '$(xcodeDeveloperDir)/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift-5.0/iphoneos'
    artifactsPath: '$(rootPath)/output/artifacts'
    resultIpa: '$(artifactsPath)/$(Project_Name).ipa'
  steps:
  - task: Bash@3
    displayName: 'Download zip to sign'
    inputs:
      targetType: 'inline'
      script: 'mkdir -p $(exportPath) && cd $(exportPath) && curl -o $(Project_Name).zip https://testupload.blob.core.windows.net/public/IoT_PnP.zip'

  - task: EsrpCodeSigning@1
    displayName: 'Sign build'
    inputs:
      ConnectedServiceName: 'IoT PnP PaaD'
      FolderPath: '$(exportPath)'
      Pattern: '*.zip'
      signConfigType: 'inlineSignParams'
      inlineOperation: |
        [
              {
                  "KeyCode" : "CP-233039-Apple",
                  "OperationCode" : "iOSAppSign",
                  "Parameters" : {},
                  "ToolName" : "sign",
                  "ToolVersion" : "1.0"
              }
        ]
      SessionTimeout: '60'
      MaxConcurrency: '50'
      MaxRetryAttempts: '5'

  - task: ExtractFiles@1
    displayName: 'Extract signed build'
    inputs:
      archiveFilePatterns: '$(signedZip)'
      destinationFolder: '$(signedExtractedPath)'
  
  # - task: Bash@3
  #   displayName: 'Patch ipa'
  #   inputs:
  #     targetType: 'filePath'
  #     filePath: 'patchIpa.sh'
  #     arguments: 'ipa_path="$(signedIpa)" toolchain_path="$(sourceSwiftSupportPath)" output_path="$(resultIpa)"'

  # - task: Bash@3
  #   displayName: 'Copy artifacts'
  #   inputs:
  #     targetType: 'inline'
  #     script: 'mv $(xcarchivePath) $(artifactsPath)/$(Project_Name).xcarchive'

  - task: PublishBuildArtifacts@1
    displayName: "Publish Build Artifact"
    inputs:
      PathtoPublish: '$(signedExtractedPath)'
      ArtifactName: 'ios'
      publishLocation: 'Container'